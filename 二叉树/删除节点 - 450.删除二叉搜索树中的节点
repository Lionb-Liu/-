/*
执行用时：24 ms, 在所有 C++ 提交中击败了95.48%的用户
内存消耗：31.8 MB, 在所有 C++ 提交中击败了74.88%的用户
通过测试用例：91 / 91
*/



class Solution {
    TreeNode* parent = nullptr;

public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root == nullptr)
            return nullptr;
        else if(root->val < key){
            parent = root;
            deleteNode(root->right, key);
        }
        else if(root->val > key){
            parent = root;
            deleteNode(root->left, key);
        }
        else{
            // 待删除的节点有successor
            if(root->right){
                TreeNode* successor = root->right;
                while(successor->left)
                    if(successor->left->left)
                        successor = successor->left;
                    else{
                        TreeNode *temp = successor->left;
                        successor->left = successor->left->right;
                        successor = temp;
                        successor->right = root->right;  //易漏!!!
                    }
                if(parent  &&  key < parent->val)
                    parent->left = successor;
                else if(parent  &&  key > parent->val)
                    parent->right= successor;                    
                successor->left = root->left;
                if(parent == nullptr)
                    return successor;
            }
            // 待删除的节点无successor
            else{
                if(parent  &&  key < parent->val)
                    parent->left = root->left;
                else if(parent  &&  key > parent->val)
                    parent->right = root->left;
                else if(parent == nullptr)
                    return root->left;
            }
        }
        return root;
    }
};
