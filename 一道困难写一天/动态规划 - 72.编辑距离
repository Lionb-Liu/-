/*
执行结果：通过
执行用时：8 ms, 在所有 C++ 提交中击败了93.32%的用户
内存消耗：8.7 MB, 在所有 C++ 提交中击败了80.16%的用户
通过测试用例：1146 / 1146
*/

class Solution {
public:
    int minDistance(string word1, string word2) {
        int n1 = word1.size(), n2 = word2.size();
        vector<vector<int>> dp(n1 + 1, vector<int>(n2 + 1));
        for(int j = 0; j <= n2; j++)
            dp[0][j] = j;
        for(int i = 0; i <= n1; i++)
            dp[i][0] = i;
        for(int i = 1; i <= n1; i++)
            for(int j = 1; j <= n2; j++){
                dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + 1;
                if(dp[i-1][j-1] < dp[i][j])
                    dp[i][j] = word1[i-1] == word2[j-1] ? dp[i-1][j-1] : dp[i-1][j-1] + 1;
            }
        return dp[n1][n2];
    }
};
